<%- include("partials/header"); -%>
    <div class="info">

        <i class="fas fa-user fa-2x"></i>
        <p>
            Account type: <%= accountHolder.accountHolderType %>
        </p>
        <h3 class="user-details"><%= identity.title %> <%= identity.firstName %> <%= identity.lastName %></h3>
        <h4 calss="user-details"><%= identity.email %></h4>
    
        <h3>
            Current Balance: <%= displayBalance %>
        </h3>
        <a href="/auth/logout">Log Out</a>

    </div>

    <div class="flex-container">
        <div class="flex-item income-btn" onclick="openIncome()">
            <i class="fas fa-money-bill fa-2x"></i> 
            <p class="cash-title"><%= formatCurrency(totalIn) %></p>

        </div>
        <div class="flex-item outgoing-btn" onclick="openOutgoing()">
            <i class="fas fa-cash-register fa-2x"></i>
            <p class="cash-title"><%= formatCurrency(totalOut) %></p>

        </div>

        <div class="flex-item saving-btn"  onclick="openSaving()">
            <i class="fas fa-piggy-bank fa-2x"></i>
            <p class="cash-title"><%= formatCurrency(monthlySaving) %></p>
        
        </div>
    </div>
    
    <div id="Income" class="income-page slide">
        <a href="javascript:void(0)" class="closebtn" onclick="closeIncome()">&times;</a>

        <h2 class="page-header">IN</h2>

        <div class="breakdown">
            <% groupedInFeed.forEach((item)=> { %>
                <div class="item"><%= item.spendingCategory %></div>
                <div class="amount">
                    <span><%= ((item.amount/totalIn)*100).toFixed(2) %>%</span> | 
                    <%= formatCurrency(item.amount) %>
                </div>
            <% }) %>
        </div>

    </div>

    <div id="Outgoing" class="outgoing-page slide">
        <a href="javascript:void(0)" class="closebtn" onclick="closeOutgoing()">&times;</a>

        <h2 class="page-header">OUT</h2>

        <div class="breakdown">
            <% groupedOutFeed.forEach((item)=> { %>
                <div class="item"><%= item.spendingCategory %></div>
                <div class="amount">
                    <span><%= ((item.amount/totalOut)*100).toFixed(2) %>% </span> | 
                    <%= formatCurrency(item.amount) %>
                </div>
            <% }) %>
        </div>


    </div>
    
    <div id="Saving" class="saving-page slide">
        <a href="javascript:void(0)" class="closebtn" onclick="closeSaving()">&times;</a>
        <h2 class="page-header" >SAVED</h2>

        <div class="breakdown">
            <% let today = new Date().getDay()  %>
            <div class="item">Total Saving</div>

            <div class="amount">
                <span><%= savingInPercent %> </span> | 
                <%= formatCurrency(monthlySaving) %>
            </div>

        </div>
        
        <div class="calendar">
            <% dailyPlan.forEach((item)=> { %>
                <p><% today === item.date ? "Yes" : "No" %></p>
                <div class="day-<%= item.date %>">
                    <p class="date-day"><%= item.date %>. <%= item.day %></p>
                    <p class="daily-saved"><%= item.save %></p>      
                </div>

            <% }) %>
        </div>


    </div>

    <div>
        <canvas id="myChart"></canvas>
    </div>

    <script>
        let labelStr = '<%= groupedOutFeed.map((item)=> item.spendingCategory) %>'
        let values = '<%= groupedOutFeed.map((item)=> item.amount) %>'
        let saving = '<%= monthlySaving %>'
        let total = '<%= totalIn %>'


        const chooseRGB = (items) => {
            allColours = []
            for(let i = 0; i < items; i++){

                let r = Math.floor(Math.random() * 255) + 1;
                let g = Math.floor(Math.random() * 255) + 1;
                let b = Math.floor(Math.random() * 255) + 1;

                let colour = `rgb(${r}, ${g}, ${b})`
                allColours.push(colour)
            }

            return allColours;
        }

        let labels = labelStr.split(",")
        let percents = values.split(",").map((item)=> ((item/total)*100).toFixed(2))
        
        labels.push(saving > 0 ? 'SAVING' : 'DEBT')
        percents.push(((saving/total)*100).toFixed(2))

        const data = {
            labels: labels,
            datasets: [{
                label: 'Cash Breakdown',
                data: percents,
                backgroundColor: chooseRGB(labels.length),
                hoverOffset: 5
            }]
        };

        const config = {
            type: 'doughnut',
            data: data,
            options:{
                responsive: false
            }
        };

        const myChart = new Chart(
            document.getElementById('myChart'),
            config  
        );

        
        
 
    </script>

<%- include("partials/footer"); -%>